-- 테이블 생성
-- 제약: 영화가격 2만원 이하, 상영관번호는 1~10, 같은 사람 같은 좌석 예매불가

-------------------------------------------------------------------------------

CREATe table 극장
(극장번호 number, 극장이름 varchar2(50), 위치 varchar2(50), PRIMARY key(극장번호));

create table 상영관
(극장번호 NUMBER, 상영관번호 number check(상영관번호<11 and 상영관번호>0),
영화제목 varchar2(50), 가격 number check(가격<20000), 좌석수 number,
foreign key(극장번호) references 극장(극장번호),
PRIMARY key(극장번호, 상영관번호));

create table 고객
(고객번호 number, 이름 varchar2(50), 주소 varchar2(50), primary key(고객번호));

create table 예약
(극장번호 NUMBER, 상영관번호 number, 고객번호 number, 좌석번호 number, 날짜 DATE,
foreign key(극장번호) references 극장(극장번호),
foreign key(상영관번호) references 상영관(상영관번호),
foreign key(고객번호) references 고객(고객번호),
primary key(고객번호, 좌석번호));

--------------------------------------------------------------------------------

insert into 극장 values (1, '롯데', '잠실');
insert into 극장 values (2, '메가', '강남');
insert into 극장 values (3, '대한', '잠실');

insert into 상영관 values (1, 1, '어려운 영화', 15000, 48);
insert into 상영관 values (3, 1, '멋진 영화', 7500, 120);
insert into 상영관 values (3, 2, '재밌는 영화', 8000, 110);

insert into 예약 values (3, 2, 3, 15, to_date('2020-09-01', 'yyyy-mm-dd'));
insert into 예약 values (3, 1, 4, 16, to_date('2020-09-01', 'yyyy-mm-dd'));
insert into 예약 values (1, 1, 9, 48, to_date('2020-09-01', 'yyyy-mm-dd'));

insert into 고객 values (3, '홍길동', '강남');
insert into 고객 values (4, '김철수', '잠실');
insert into 고객 values (9, '박영희', '강남');

--------------------------------------------------------------------------------

commit;

--------------------------------------------------------------------------------

--1.1: 모든 극장 이름과 위치
select 극장이름, 위치 from 극장;

--1.2: 잠실에 있는 극장
select * from 극장 where 위치 = '잠실';

--1.3: 잠실 사는 고객 이름 오름차순
select 이름 from 고객 where 주소 = '잠실' order by 이름 asc;

--1.4: 8000원 이하 영화 극장번호, 상영관번호, 영화제목
select 극장번호, 상영관번호, 영화제목 from 상영관  where 가격<=8000;

--1.5.1: 예약 극장 위치와 고객 주소가 같은 고객
select * from 고객 where 주소=(select 주소 from 고객, 예약, 극장 where 고객.고객번호=예약.고객번호 and 예약.극장번호=극장.극장번호 and 고객.주소=극장.위치);

--1.5.2: 극장이 있는 위치에 사는 고객
select * from 고객 where 주소 = '잠실' or 주소 = '강남';
select * from 고객 c where 주소 = (select distinct 위치 from 극장 t where c.주소 = t.위치);
select * from 고객 c where 주소 in (select 위치 from 극장 t where c.주소 = t.위치);

--------------------------------------------------------------------------------

--2.1: 극장수 몇개?
select count(distinct 극장번호) "극장 수" from 극장;

--2.2: 상영되는 영화 평균가?
select round(avg(가격),0) from 상영관;

--2.3: 2020년 9월 1일 영화 관람 고객 수?
select count(고객번호) "고객 수" from 예약 where 날짜 = to_date('20200901', 'yyyymmdd');

--3.1: '대한' 극장에서 상영된 영화제목?
select 영화제목 from 상영관 where 극장번호=(select 극장번호 from 극장 where 극장이름='대한');

--3.2: '대한' 극장에서 영화본 고객 이름?
select 이름 from 고객 where 고객번호 in (select distinct 고객번호 from 예약 where 극장번호=(select 극장번호 from 극장 where 극장이름 = '대한'));

--3.3: '대한' 극장 전체 수입?
select sum(가격) from 상영관
where 상영관번호 in
(select 상영관번호 from 예약 where 극장번호 = (select 극장번호 from 극장 where 극장이름 = '대한'))
and 극장번호 = (select 극장번호 from 극장 where 극장이름 = '대한');

--------------------------------------------------------------------------------

--4.1: 극장별 상영관 수?
select (select 극장이름 from 극장 t where t.극장번호=r.극장번호) "극장 이름", count(상영관번호) "상영관 수" from 상영관 r group by 극장번호;

--4.2: '잠실'에 있는 극장의 상영관
select * from 상영관 where 극장번호 in (select 극장번호 from 극장 where 위치='잠실');

--4.3.1: 2020년 9월 1일 관객이 있는 극장별 평균 관객 수?
select avg(count(고객번호)) 평균관객수 from 예약 where 날짜=to_date('20200901','yyyymmdd')
group by 극장번호;
--4.3.2: 2020년 9월 1일 모든 극장별 평균 관객 수?
select avg(count(r.고객번호)) from 극장 t left outer join 예약 r on r.극장번호= t.극장번호 group by t.극장이름;
--4.4: 2020년 9월 1일 최대 관객 영화?;
select 영화제목 from 상영관 group by 영화제목 having count(영화제목) = 
(select max(count(영화제목))최대관객 from 예약 natural join 상영관 where 날짜 = to_date('20200901', 'yyyymmdd') group by 영화제목);
--bonus: 영화당 상영관 수?
select 영화제목, count(영화제목)"영화당 상영관 수" from 상영관 group by 영화제목;

--------------------------------------------------------------------------------

--5.1: 각 테이블 데이터 삽입하는 insert문 하나씩 이행
insert into 테이블 (속성num1, 속성chr, 속성num2) values (1, 'a', 2);
--5.2: 영화 가격 10% 인상
update 상영관 set 가격=가격*1.1;

--------------------------------------------------------------------------------
