# 클래스-함수 이용, 버스카드 by 파이썬

import time # 환승기능을 위한 time 모듈 불러오기

fee = 1400  # 성인기준 버스 기본 요금, 전역변수

print("\n<<버스카드 이용안내문입니다.>> \n\n\n\"성인기준 버스 이용요금은 1400원입니다.\"")
print("\n\"하차 태그 후 30분 이내 환승 시 1회에 한하여 승차 비용이 차감되지 않습니다.\"\n\n\"환승을 위해 내리실 때 하차 태그 후 하차하여주세요.\"\n")
# 실행 후 첫 1회 안내문 출력


#------------------------------------------------------------------------------------------클래스1------------------------------------------------------------------------------------------
class bus_card:
    
    def __init__(self): # 새 호출시 초기화할 변수
        self.__remain = 0
        self.__pay_time = 0
        self.__now1 = 0
        self.__now2 = 0

    def get_in(self, money): # 충전
        if money>0:
            self.__remain += money
            print("\n\n------------\"%5d원 충전이 완료되었습니다.\"-----------------\n\n------------\"현재 버스카드 잔액은 %5d원입니다.\"------------\n" %(money,self.__remain))
            return self.__remain
        else:
            print("\n\n------------\"잘못된 입력입니다.\"-------------------------------------------\n\n")

    def get_pay(self): # 승차 및 환승
        self.__pay_time = time.time()
        
        if self.__now1<self.__pay_time<self.__now2:
            self.__now1 = 0 # 환승 후 입력되었던 시간 변수를 무한 환승
            self.__now2 = 0 # 오류를 방지하기 위해 다시 초기화 해줌
            print("\n\n------------\"환승입니다.\"-----------------------------------------------\n\n------------\"현재 버스카드 잔액은 %5d원입니다.\"----------------------\n" %self.__remain)
            return self.__remain, self.__now1, self.__now2
        elif self.__remain < fee:
            print("\n\n------------\"잔액이 부족합니다. 현재 버스카드 잔액은 %d원입니다.\"------------\n\n" %self.__remain)
            return self.__remain

        else:
            self.__remain -= fee
            print("\n\n\n------------\"감사합니다. 현재 버스카드 잔액은 %d원입니다.\"------------\n\n" %self.__remain)
            return self.__remain

    def transfer(self): # 환승 기능을 위한 시간변수 입력 및 30분 제한
        if self.__remain >= 1400:
            self.__now1 = time.time()
            self.__now2 = self.__now1 + 1800   # 1800  ==  30분
            print("\n\n-----------------\"하차입니다.\"-----------------\n")
            return self.__now1, self.__now2 # 환승 가능 시작과 끝 시간값 리턴해줌
        else:
            print("\n\n------------\"하차입니다.\"--------------------------------------------------\n\n------------\"잔액이 부족하여 환승하실 수 없습니다.\"------------------------")
            print("\n------------\"현재 버스카드 잔액은 %d원입니다.\"------------------------------\n" %self.__remain)
#------------------------------------------------------------------------------------------클래스1------------------------------------------------------------------------------------------


b = bus_card() # 클래스 호출명 초기화


#------------------------------------------------------------------------------------------메인함수------------------------------------------------------------------------------------------
while 1:
    print("---------------------------\n\n충전하기: \"1\"\n\n---------------------------")
    print("\n승차하기: \"2\"\n\n하차하기: \"3\"\n\n---------------------------")
    print("\n종료 코드: \"0\"\n\n---------------------------")
    a=int(input("\n행동을 입력해주세요: "))
    
    if a == 1:
        money = int(input("\n충전하실 금액을 입력해 주세요: "))
        b.get_in(money)
    elif a == 2:
        b.get_pay()
    elif a == 3:
        b.transfer()
    elif a == 0: # 프로그램 종료 코드
        print("\n프로그램을 종료합니다.")
        break
    else:
        print("\n\n------------\"잘못된 입력입니다.\"-------------------------------------------\n\n")
#------------------------------------------------------------------------------------------메인함수------------------------------------------------------------------------------------------


